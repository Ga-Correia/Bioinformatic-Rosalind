# -*- coding: utf-8 -*-
"""atv13_needleman_wunsch_bioavanc.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tFYAzPGQwQHhUcSkxRAG1de2g3d69eJr
"""

#pip install biopython

import Bio
from Bio import SeqIO
from Bio.Align import substitution_matrices

BLOSUM62 = substitution_matrices.load('BLOSUM62')

def algoritmo_Needleman_Wunsch(seq1, seq2):
  H = []
  gap = -5
  for i in range(len(seq2)+1):
    H.append([])

  init = 0
  for j in range(0, len(seq1)+1):
    H[0].append(init)
    init = init - 5
  init = -5
  for i in range(1, len(seq2)+1):
    H[i].append(init)
    init = init - 5
    
  #print(H)

  #print("Matriz de programacao dinamica:")
  for i in range(1, len(seq2)+1):
    for j in range(1, len(seq1)+1):
        val = max(H[i-1][j-1] + (BLOSUM62[seq2[i-1]][seq1[j-1]]), H[i][j-1]+(gap), H[i-1][j]+(gap))
        H[i].append(val)

  return int(H[i][j])

record = SeqIO.parse("rosalind_glob.txt", "fasta")
seq1 = next(record).seq
seq2 = next(record).seq

if len(seq1) >= len(seq2):
  print(algoritmo_Needleman_Wunsch(str(seq1), str(seq2)))
else:
  print(algoritmo_Needleman_Wunsch(str(seq2), str(seq1)))